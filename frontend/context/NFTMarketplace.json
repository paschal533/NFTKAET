{
  "aci": {
    "encodedAci": {
      "contract": {
        "event": {
          "variant": [
            { "MarketItemCreated": ["address", "int", "int"] },
            { "ResellToken": ["address", "int", "int"] },
            { "BuyToken": ["address", "int", "int"] }
          ]
        },
        "functions": [
          {
            "arguments": [],
            "name": "init",
            "payable": false,
            "returns": "NFTMarketplace.state",
            "stateful": true
          },
          {
            "arguments": [
              { "name": "metadata", "type": "string" },
              { "name": "_price", "type": "int" }
            ],
            "name": "createToken",
            "payable": false,
            "returns": "int",
            "stateful": true
          },
          {
            "arguments": [{ "name": "token_id", "type": "int" }],
            "name": "metadata",
            "payable": false,
            "returns": "string",
            "stateful": false
          },
          {
            "arguments": [],
            "name": "aex141_extensions",
            "payable": false,
            "returns": { "list": ["string"] },
            "stateful": false
          },
          {
            "arguments": [
              { "name": "tokenId", "type": "int" },
              { "name": "price", "type": "int" }
            ],
            "name": "resellToken",
            "payable": false,
            "returns": { "tuple": [] },
            "stateful": true
          },
          {
            "arguments": [{ "name": "tokenId", "type": "int" }],
            "name": "buyToken",
            "payable": true,
            "returns": { "tuple": [] },
            "stateful": true
          },
          {
            "arguments": [],
            "name": "fetchMarketItems",
            "payable": false,
            "returns": { "list": ["NFTMarketplace.marketItem"] },
            "stateful": false
          }
        ],
        "kind": "contract_main",
        "name": "NFTMarketplace",
        "payable": false,
        "state": {
          "record": [
            { "name": "name", "type": "string" },
            { "name": "symbol", "type": "string" },
            { "name": "owner", "type": "address" },
            {
              "name": "idToMarketItem",
              "type": { "map": ["int", "NFTMarketplace.marketItem"] }
            },
            { "name": "metadata", "type": { "map": ["int", "string"] } },
            {
              "name": "marketItemsList",
              "type": { "list": ["NFTMarketplace.marketItem"] }
            },
            { "name": "counter", "type": "int" }
          ]
        },
        "type_defs": [
          {
            "name": "metadata_type",
            "typedef": {
              "variant": [
                { "URL": [] },
                { "IPFS": [] },
                { "OBJECT_ID": [] },
                { "MAP": [] }
              ]
            },
            "vars": []
          },
          {
            "name": "metadata",
            "typedef": {
              "variant": [
                { "MetadataIdentifier": ["string"] },
                { "MetadataMap": [{ "map": ["string", "string"] }] }
              ]
            },
            "vars": []
          },
          {
            "name": "marketItem",
            "typedef": {
              "record": [
                { "name": "tokenId", "type": "int" },
                { "name": "seller", "type": "address" },
                { "name": "owner", "type": "address" },
                { "name": "price", "type": "int" },
                { "name": "metadata_Url", "type": "string" },
                { "name": "sold", "type": "bool" }
              ]
            },
            "vars": []
          }
        ]
      }
    },
    "externalEncodedAci": [
      { "namespace": { "name": "ListInternal", "type_defs": [] } },
      { "namespace": { "name": "List", "type_defs": [] } },
      { "namespace": { "name": "Option", "type_defs": [] } },
      { "namespace": { "name": "String", "type_defs": [] } }
    ],
    "interface": "\n\n\n\nmain contract NFTMarketplace =\n  record state = {name : string,symbol : string,owner : address,idToMarketItem : map(int, NFTMarketplace.marketItem),metadata : map(int, string),marketItemsList : list(NFTMarketplace.marketItem),counter : int}\n  datatype event = MarketItemCreated(address, int, int) | ResellToken(address, int, int) | BuyToken(address, int, int)\n  datatype metadata_type = URL | IPFS | OBJECT_ID | MAP\n  datatype metadata = MetadataIdentifier(string) | MetadataMap(map(string, string))\n  record marketItem = {tokenId : int,seller : address,owner : address,price : int,metadata_Url : string,sold : bool}\n  stateful entrypoint init : () => NFTMarketplace.state\n  stateful entrypoint createToken : (string, int) => int\n  entrypoint metadata : (int) => string\n  entrypoint aex141_extensions : () => list(string)\n  stateful entrypoint resellToken : (int, int) => unit\n  payable stateful entrypoint buyToken : (int) => unit\n  entrypoint fetchMarketItems : () => list(NFTMarketplace.marketItem)\n"
  }
}
